
KEYWORD: save
Saves a BASIC program to the current drive.

    save "game.bas"


KEYWORD: setdate
Sets the RTC to the given date ; the parameters are the day, month and
year (00-99).

    100 setdate 23,1,3


KEYWORD: settime
Sets the RTC to the given time ; the parameters are hours, minutes, seconds

    100 settime 9,44,25


KEYWORD: sgn()
Returns the sign of an number, which is -1 0 or 1 depending on the value.

    100 print sgn(42)


KEYWORD: sound
Generates a sound on one of the channels. There are four channels,
corresponding to the. Channel 3 is a noise channel, channels 0-2 are simple
square wave channels generating one note each.

Sound has two forms

    100 sound 1,500,10

generates a sound of pitch 1000 which runs for about 10 timer ticks. The actual
frequency is 111,563 / <pitch value>. The pitch value can be from 1 to 1023
Sounds can be queued up , so you can play 3 notes in a row e.g.

    100 sound 1,1000,20:sound 1,500,10:sound 1,250,20

An adjuster value can be added which adds a constant to the pitch every tick,
which allows the creation of some simple warpy effects, as in the ZAP command.

    100 sound 1,500,10,10

Creates a tone which drops as it plays (higher pitch values are lower
frequency values)
Channel 3 operates slightly differently. It generates noises which can be
modulated by channel 2- see the SN76489 data sheet.
However, there are currently 8 sounds, which are accessed by the pitch being
16 times the sound number.

    100 sound 3,6*16,10

Is an explosiony sort of sound. You can just use the constant 96 of course
instead. Finally this turns off all sound and empties the queues.
Sound off


KEYWORD: spc()
Return a string consisting of a given number of spaces

    100 a$ = spc(32)


KEYWORD: sprite
Manipulate one of the 64 hardware sprites using the standard modifiers. Also
supported are sprite image <n> which turns a sprite on and selects image <n>
to be used for it, and sprite off, which turns a sprite off. Sprite data is
stored at $30000 onwards. Sprites cannot be scaled and flipped as the hardware
does not permit it. Sprites have their own section. For Sprite .. To the sprite
is centred on those coordinates.

    100 sprite 4 image 2 to 50,200


KEYWORD: sprites
Enables and Disables all sprites,optionally setting the location of the sprite
data in memory which default to $30000. When turned on, all the sprites are
erased and their control values set to zero.

    100 sprites at $18000 on


KEYWORD: stop
Stops program with an error

    100 stop


KEYWORD: text
Draws a possibly scaled or flipped string from the standard font on the bitmap,
using the standard syntax. Flipping is done using bits 7 and 6 of the mode
(e.g. $80 and $40) in the colour option,

    100 text "hello" dim 2 colour 3 to 100,100


KEYWORD: tile
Manipulates the tile map. This allows you to set the scroll offset
(with TO xscroll,yscroll) and draw on the time map using AT x,y to set the
position and PLOT followed by a list of tiles, with a repeat option using
LINE to draw on it. (In the examples, lines 110 and 120 do the same thing)

    100 tile to 12,0
    110 tile at 4,5 draw 10,11,11,11,10
    120 tile at 4,5 draw 10,11 line 3,10


KEYWORD: tile()
Returns the tile at the given tile map position (not screen position)

    100 print tile(2,3)


KEYWORD: tiles
Sets up the tile map. Allows the setting of the size of the tile map with
DIM <width>,<height> and the location of the data with
AT <map address>,<image address>, all addresses must be at the start of
an 8k page.
The defaults are 64 x 32 for the tile map and $24000 for the map - an array of
words and $26000 for the images - an array of 8x8 byte graphics.
Currently only 8x8 tiles are supported.

    100 tiles on
    110 tiles off
    120 tiles dim 42,32 at $24000,$26000 on


KEYWORD: timer()
Returns the current value of the 70Hz Frame timer, which will wrap round in a
couple of days.

    100 print timer()


KEYWORD: try
Tries to execute a command, usually involving the Kernel, returning an error
code if it fails or 0 if successful. Currently supports BLOAD and BSAVE.

    100 try bload "myfile",$10000 to ec
    110 print ec


KEYWORD: val()
Converts a number to a string. There must be some number there e.g. "-42xxx"
works and returns 42 but "xxx" returns an error.  To make it useable use the
function isval() which checks to see if it is valid.

    100 print val("42")
    110 print val("413.22")


KEYWORD: str$()
Converts a string to a number, in signed decimal form.

    100 print str$(42),str$(412.16)


KEYWORD: true
Returns the constant -1

    100 true


KEYWORD: verify
Compares the current BASIC program to a program stored on the current drive.
This command is deprecated at creation as it is a defensive measure against
potential bugs in either the kernel, the kernel drivers, or BASIC itself.

    verify "game.bas"


KEYWORD: while wend
Conditional loop with test at the top

    100 islow = 0
    110 while islow < 10
    120 print islow
    130 islow = islow + 1
    140 wend


KEYWORD: xload xgo
These commands are for cross development in BASIC. If you store an ASCII
BASIC program, terminated with a character code >= 128, then these commands
will Load or Load and then run that program.


KEYWORD: zap ping shoot and explode
Simple commands that generate a simple sound effect

    100 ping:zap:explode


